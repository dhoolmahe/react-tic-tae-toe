{"ast":null,"code":"var _jsxFileName = \"/Users/mahe/Documents/Mahe-KnowledgeBase/MaheReactGameDemo/my-react-project/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const handleClick = index => {\n    if (board[index] || calculateWinner(board)) return;\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? \"X\" : \"O\";\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n  const winner = calculateWinner(board);\n  const status = winner ? `Winner: ${winner}` : `Next Player: ${isXNext ? \"X\" : \"O\"}`;\n  const renderSquare = index => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(index),\n    children: board[index]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YEYSqvL6fOShla2jZSP//3y9U3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","isXNext","setIsXNext","handleClick","index","calculateWinner","newBoard","slice","squares","lines","line","a","b","c","winner","status","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahe/Documents/Mahe-KnowledgeBase/MaheReactGameDemo/my-react-project/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/App.css\";\n\nconst App = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n\n  const handleClick = (index) => {\n    if (board[index] || calculateWinner(board)) return;\n\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? \"X\" : \"O\";\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  const winner = calculateWinner(board);\n  const status = winner\n    ? `Winner: ${winner}`\n    : `Next Player: ${isXNext ? \"X\" : \"O\"}`;\n\n  const renderSquare = (index) => (\n    <button className=\"square\" onClick={() => handleClick(index)}>\n      {board[index]}\n    </button>\n  );\n\n  return (\n    <div className=\"app\">\n      <h1>Tic Tac Toe</h1>\n      <div className=\"status\">{status}</div>\n      <div className=\"board\">\n        <div className=\"row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}